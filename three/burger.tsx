'use client'
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 krabby_patty_burger.glb -t 
Author: Bársh (https://sketchfab.com/borsh_and)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/krabby-patty-burger-05ab2896f8ad4601b5ae118cddaaeab3
Title: Krabby Patty Burger
*/

import * as THREE from 'three'
import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { Group, Object3DEventMap } from 'three'

type ActionName = 'Scene'

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}

type GLTFResult = GLTF & {
  nodes: {
    ['��������������_002_��������������_Base_Color_0']: THREE.Mesh
    ['��������������_��������������_Base_Color_0']: THREE.Mesh
    ['����������_����������_Base_Color_0']: THREE.Mesh
    ['������_������_Base_Color_0']: THREE.Mesh
    ['��������������_��������������_Base_Color_0_1']: THREE.Mesh
    ['��������������_001_��������������_Base_Color_0']: THREE.Mesh
    ['������������_������������_Base_Color_0']: THREE.Mesh
    ['������������002_������������_Base_Color_0']: THREE.Mesh
    ['������������001_������������_Base_Color_0']: THREE.Mesh
    ['������_������_Base_Color_0_1']: THREE.Mesh
    ['��������������_Liquid_Domain_Material002_0']: THREE.Mesh
    ['������������_Liquid_Domain_Material001_0']: THREE.Mesh
  }
  materials: {
    Base_Color: THREE.MeshStandardMaterial
    Base_Color_0: THREE.MeshStandardMaterial
    Base_Color_2: THREE.MeshStandardMaterial
    Base_Color_3: THREE.MeshStandardMaterial
    Base_Color_1: THREE.MeshStandardMaterial
    Base_Color_5: THREE.MeshStandardMaterial
    Base_Color_0_6: THREE.MeshStandardMaterial
    ['Liquid_Domain_Material.002']: THREE.MeshPhysicalMaterial
    ['Liquid_Domain_Material.001']: THREE.MeshPhysicalMaterial
  }
  animations: GLTFAction[]
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group<THREE.Object3DEventMap>>(null!)
  const { nodes, materials, animations } = useGLTF('/gltf/krabby_patty_burger.glb') as GLTFResult
  const { actions } = useAnimations(animations, group)

  useEffect(() => {
    actions.Scene?.play()
  }, [])
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
          <group name="����������������������_animationfbx" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
            <group name="Object_2">
              <group name="RootNode">
                <group name="Root" position={[-1.24, 1, -5.407]} rotation={[-Math.PI / 2, 0, 0]} scale={100}>
                  <group name="����������1" position={[0, 0, 0.02]}>
                    <group name="��������������_002" position={[-0.01, 0.026, 0.046]}>
                      <mesh name="��������������_002_��������������_Base_Color_0" geometry={nodes['��������������_002_��������������_Base_Color_0'].geometry} material={materials.Base_Color} />
                    </group>
                  </group>
                  <group name="��������������" position={[0, 0, 0.53]}>
                    <group name="��������������_1" position={[-0.04, -0.248, 0.164]}>
                      <mesh name="��������������_��������������_Base_Color_0" geometry={nodes['��������������_��������������_Base_Color_0'].geometry} material={materials.Base_Color_0} />
                    </group>
                  </group>
                  <group name="����������001" position={[0, 0, 0.718]}>
                    <group name="����������" position={[-0.019, -0.081, -0.083]} rotation={[0, 0, -0.146]}>
                      <mesh name="����������_����������_Base_Color_0" geometry={nodes['����������_����������_Base_Color_0'].geometry} material={materials.Base_Color_2} />
                    </group>
                  </group>
                  <group name="������001" position={[0, 0, 0.769]}>
                    <group name="������" position={[-0.119, -0.058, 0.07]} rotation={[0, 0, -Math.PI / 9]}>
                      <mesh name="������_������_Base_Color_0" geometry={nodes['������_������_Base_Color_0'].geometry} material={materials.Base_Color_3} />
                    </group>
                  </group>
                  <group name="��������������001" position={[0.097, 0.22, 1.013]}>
                    <group name="��������������_2" position={[-0.026, 0.031, -0.076]} rotation={[0.002, -0.012, -0.075]}>
                      <mesh name="��������������_��������������_Base_Color_0_1" geometry={nodes['��������������_��������������_Base_Color_0_1'].geometry} material={materials.Base_Color_1} />
                    </group>
                  </group>
                  <group name="����������2" position={[0, 0, 1.22]}>
                    <group name="��������������_001" position={[-0.015, 0.014, -0.047]}>
                      <mesh name="��������������_001_��������������_Base_Color_0" geometry={nodes['��������������_001_��������������_Base_Color_0'].geometry} material={materials.Base_Color} />
                    </group>
                  </group>
                  <group name="������������1" position={[-0.878, -0.327, 0.835]} rotation={[0.14, -0.175, 0]}>
                    <group name="������������" position={[0.004, 0.037, 0.014]} rotation={[0.026, 0.025, -0.003]}>
                      <mesh name="������������_������������_Base_Color_0" geometry={nodes['������������_������������_Base_Color_0'].geometry} material={materials.Base_Color_5} />
                    </group>
                  </group>
                  <group name="������������2" position={[-0.1, 0.6, 1.05]} rotation={[0.052, 0, 0]}>
                    <group name="������������002" position={[-0.01, 0.043, 0.008]} rotation={[0.022, 0.014, -0.494]}>
                      <mesh name="������������002_������������_Base_Color_0" geometry={nodes['������������002_������������_Base_Color_0'].geometry} material={materials.Base_Color_5} />
                    </group>
                  </group>
                  <group name="������������3" position={[0.29, -0.34, 1.09]} rotation={[0, -0.07, 0]}>
                    <group name="������������001_1" position={[-0.041, 0.013, -0.007]} rotation={[-0.035, 0.018, 0.698]}>
                      <mesh name="������������001_������������_Base_Color_0" geometry={nodes['������������001_������������_Base_Color_0'].geometry} material={materials.Base_Color_5} />
                    </group>
                  </group>
                  <group name="������001_1" position={[-0.454, -0.191, 1.12]} rotation={[0.152, -0.279, 0.028]}>
                    <group name="������_1" position={[-0.025, 0.049, 0.025]} rotation={[-3.107, -0.031, 2.816]}>
                      <mesh name="������_������_Base_Color_0_1" geometry={nodes['������_������_Base_Color_0_1'].geometry} material={materials.Base_Color_0_6} />
                    </group>
                  </group>
                  <group name="��������������001_1" position={[-0.403, 0.186, 1.215]}>
                    <group name="��������������_3" position={[-0.021, 0.002, -0.053]}>
                      <mesh name="��������������_Liquid_Domain_Material002_0" geometry={nodes['��������������_Liquid_Domain_Material002_0'].geometry} material={materials['Liquid_Domain_Material.002']} />
                    </group>
                  </group>
                  <group name="������������001" position={[0.296, 0.28, 1.179]}>
                    <group name="������������_1" position={[-0.009, 0.001, 0.004]}>
                      <mesh name="������������_Liquid_Domain_Material001_0" geometry={nodes['������������_Liquid_Domain_Material001_0'].geometry} material={materials['Liquid_Domain_Material.001']} />
                    </group>
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/gltf/krabby_patty_burger.glb')
